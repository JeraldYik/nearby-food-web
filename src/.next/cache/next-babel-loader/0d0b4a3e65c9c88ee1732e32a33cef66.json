{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jerald/Desktop/nearby-food-web/src/stores/GlobalStore.tsx\";\nimport { createContext, useReducer } from 'react';\nimport GlobalReducer from 'reducers';\nexport let EateryTypes;\n\n(function (EateryTypes) {\n  EateryTypes[\"Restaurant\"] = \"restaurant\";\n  EateryTypes[\"Caf\\xE9\"] = \"cafe\";\n})(EateryTypes || (EateryTypes = {}));\n\nconst initialState = {\n  address: '',\n  type: Object.values(EateryTypes)[0],\n  rating: 3.5,\n  minPrice: 1,\n  maxPrice: 2,\n  radius: 2000\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\n\nconst GlobalProvider = ({\n  children\n}) => {\n  // <(IState, IAction) => IState, IState>\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(GlobalReducer, initialState); // TODO: to resolve\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\nexport default GlobalProvider;","map":{"version":3,"sources":["/Users/jerald/Desktop/nearby-food-web/src/stores/GlobalStore.tsx"],"names":["createContext","useReducer","GlobalReducer","EateryTypes","initialState","address","type","Object","values","rating","minPrice","maxPrice","radius","GlobalContext","GlobalProvider","children","state","dispatch"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAAmD,OAAnD;AACA,OAAOC,aAAP,MAA0B,UAA1B;AAEA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAcZ,MAAMC,YAAoB,GAAG;AAC3BC,EAAAA,OAAO,EAAE,EADkB;AAE3BC,EAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAcL,WAAd,EAA2B,CAA3B,CAFqB;AAG3BM,EAAAA,MAAM,EAAE,GAHmB;AAI3BC,EAAAA,QAAQ,EAAE,CAJiB;AAK3BC,EAAAA,QAAQ,EAAE,CALiB;AAM3BC,EAAAA,MAAM,EAAE;AANmB,CAA7B;AASA,OAAO,MAAMC,aAA8B,gBAAGb,aAAa,CAASI,YAAT,CAApD;;AAEP,MAAMU,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0E;AAC/F;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,UAAU,CAACC,aAAD,EAAgBE,YAAhB,CAApC,CAF+F,CAI/F;;AACA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACY,KAAD,EAAQC,QAAR,CAA/B;AAAA,cAAmDF;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAND;;AAQA,eAAeD,cAAf","sourcesContent":["import { createContext, useReducer, Context } from 'react';\nimport GlobalReducer from 'reducers';\n\nexport enum EateryTypes {\n  Restaurant = 'restaurant',\n  Caf√© = 'cafe'\n}\n\nexport interface IState {\n  address: string;\n  type: EateryTypes;\n  rating: number;\n  minPrice: number;\n  maxPrice: number;\n  radius: number;\n}\n\nconst initialState: IState = {\n  address: '',\n  type: Object.values(EateryTypes)[0],\n  rating: 3.5,\n  minPrice: 1,\n  maxPrice: 2,\n  radius: 2000\n};\n\nexport const GlobalContext: Context<IState> = createContext<IState>(initialState);\n\nconst GlobalProvider = ({ children }: { children: JSX.Element[] | JSX.Element }): JSX.Element => {\n  // <(IState, IAction) => IState, IState>\n  const [state, dispatch] = useReducer(GlobalReducer, initialState);\n\n  // TODO: to resolve\n  return <GlobalContext.Provider value={[state, dispatch]}>{children}</GlobalContext.Provider>;\n};\n\nexport default GlobalProvider;\n"]},"metadata":{},"sourceType":"module"}