{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jerald/Desktop/nearby-food-web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jerald/Desktop/nearby-food-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport axios from 'axios';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar baseURL = publicRuntimeConfig.BASE_URL || '';\nvar API = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, params, queries, body) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(path);\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get('https://cors-anywhere.herokuapp.com/' + 'http://localhost:3000' + path);\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n              if (_context.t0.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                console.error(_context.t0.response.data);\n                console.error(_context.t0.response.status);\n                console.error(_context.t0.response.headers);\n              } else if (_context.t0.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                console.error(_context.t0.request);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                console.error('Error', _context.t0.message);\n              }\n\n              console.error(_context.t0.config);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    function get(_x, _x2, _x3, _x4) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }()\n};\n\nvar generateURL = function generateURL(path, params, queries) {\n  var finalURL = path.charAt(0) === '/' ? baseURL + path : baseURL + '/' + path;\n  console.log('1', params);\n\n  if (params) {\n    console.log('2');\n    var paramKeys = Object.getOwnPropertyNames(params);\n\n    var _iterator = _createForOfIteratorHelper(paramKeys),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var p = _step.value;\n        finalURL = finalURL.replace(\":\".concat(p), params[p]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  console.log('2');\n\n  if (queries) {\n    var queryKeys = Object.getOwnPropertyNames(queries);\n    var cleanedQueries = queryKeys.filter(function (k) {\n      return queries[k] !== undefined && queries[k] !== null;\n    });\n\n    if (0 === cleanedQueries.length) {\n      return finalURL;\n    }\n\n    finalURL += '?';\n\n    var _iterator2 = _createForOfIteratorHelper(cleanedQueries),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var q = _step2.value;\n        finalURL += \"\".concat(q, \"=\").concat(queries[q], \"&\");\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  console.log('3');\n  return finalURL.slice(0, -1);\n};\n\nexport default API;","map":{"version":3,"sources":["/Users/jerald/Desktop/nearby-food-web/src/lib/api/call.ts"],"names":["axios","getConfig","publicRuntimeConfig","baseURL","BASE_URL","API","get","path","params","queries","body","console","log","response","data","error","status","headers","request","message","config","generateURL","finalURL","charAt","paramKeys","Object","getOwnPropertyNames","p","replace","queryKeys","cleanedQueries","filter","k","undefined","length","q","slice"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport getConfig from 'next/config';\n\nconst { publicRuntimeConfig } = getConfig();\nconst baseURL: string = publicRuntimeConfig.BASE_URL || '';\n\nconst API = {\n  get: async <Response>(path: string, params?: any, queries?: any, body?: any): Promise<Response | undefined> => {\n    console.log(path);\n    try {\n      // const url = generateURL(path, params, queries);\n      // console.log(url);\n      // const response = await axios.get(url);\n      const response = await axios.get('https://cors-anywhere.herokuapp.com/' + 'http://localhost:3000' + path);\n      return response.data as Response;\n    } catch (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error(error.response.data);\n        console.error(error.response.status);\n        console.error(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.error(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error', error.message);\n      }\n      console.error(error.config);\n    }\n  }\n};\n\nconst generateURL = (path: string, params?: any, queries?: any): string => {\n  let finalURL = path.charAt(0) === '/' ? baseURL + path : baseURL + '/' + path;\n  console.log('1', params);\n  if (params) {\n    console.log('2');\n    const paramKeys = Object.getOwnPropertyNames(params);\n    for (const p of paramKeys) {\n      finalURL = finalURL.replace(`:${p}`, params[p]);\n    }\n  }\n  console.log('2');\n  if (queries) {\n    const queryKeys = Object.getOwnPropertyNames(queries);\n    const cleanedQueries = queryKeys.filter((k: string) => {\n      return queries[k] !== undefined && queries[k] !== null;\n    });\n\n    if (0 === cleanedQueries.length) {\n      return finalURL;\n    }\n\n    finalURL += '?';\n    for (const q of cleanedQueries) {\n      finalURL += `${q}=${queries[q]}&`;\n    }\n  }\n  console.log('3');\n  return finalURL.slice(0, -1);\n};\n\nexport default API;\n"]},"metadata":{},"sourceType":"module"}