{"ast":null,"code":"// import { NextApiRequest, NextApiResponse } from 'next';\n// import runMiddlewares from 'lib/api/middlewares';\n// import Cors from 'cors';\n// export default async (req: NextApiRequest, res: NextApiResponse) => {\n//   // if (req.method === 'GET') {\n//   //   const apiKey: string = process.env.GOOGLE_APIKEY || '';\n//   //   const address = '577047';\n//   //   /** DOCUMENTATION\n//   //    *  https://developers.google.com/maps/documentation/geocoding/overview\n//   //    */\n//   //   const geocodeURI = `https://maps.googleapis.com/maps/api/geocode/json?address=${address} Singapore&key=${apiKey}`;\n//   //   try {\n//   //     const response = await axios.get(geocodeURI);\n//   //     if (response.status === 200) {\n//   //       if (response.data.status === 'OK') {\n//   //         console.log(response.data);\n//   //         res.statusCode = 200;\n//   //         res.setHeader('Content-Type', 'application/json');\n//   //         res.end(JSON.stringify(response.data));\n//   //       } else {\n//   //         console.log(`Error! ${response.data.status}`);\n//   //       }\n//   //     } else {\n//   //       console.log('There is an Error!\\nReponse Code: ' + response.status.toString());\n//   //     }\n//   //   } catch (err) {\n//   //     console.log('There is an error! Please try again.\\n' + err.toString());\n//   //   }\n//   // } else {\n//   //   throw new Error('Methods other than GET not allowed!');\n//   // }\n//   console.log('in api');\n//   // Initialize the cors middleware\n//   const cors = initMiddleware(\n//     // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\n//     Cors()\n//   );\n//   // // Run cors\n//   await cors(req, res);\n//   // // Rest of the API logic\n//   res.json({ message: 'Hello Everyone!' });\n//   // await runMiddlewares(req, res);\n//   // res.statusCode = 200;\n//   // res.json({ hello: 'world' });\n// };\n// function initMiddleware(middleware) {\n//   return (req, res) =>\n//     new Promise((resolve, reject) => {\n//       middleware(req, res, (result) => {\n//         if (result instanceof Error) {\n//           return reject(result);\n//         }\n//         return resolve(result);\n//       });\n//     });\n// }\nimport nextConnect from 'next-connect';\nexport default function getHandler() {\n  return nextConnect().get((req, res) => {\n    res.send('Hello world');\n  });\n}","map":{"version":3,"sources":["/Users/jerald/Desktop/nearby-food-web/src/pages/api/googleConsole.ts"],"names":["nextConnect","getHandler","get","req","res","send"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,WAAP,MAAwB,cAAxB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,SAAOD,WAAW,GAAGE,GAAd,CAAkB,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AACtEA,IAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACD,GAFM,CAAP;AAGD","sourcesContent":["// import { NextApiRequest, NextApiResponse } from 'next';\n// import runMiddlewares from 'lib/api/middlewares';\n\n// import Cors from 'cors';\n\n// export default async (req: NextApiRequest, res: NextApiResponse) => {\n//   // if (req.method === 'GET') {\n//   //   const apiKey: string = process.env.GOOGLE_APIKEY || '';\n//   //   const address = '577047';\n\n//   //   /** DOCUMENTATION\n//   //    *  https://developers.google.com/maps/documentation/geocoding/overview\n//   //    */\n//   //   const geocodeURI = `https://maps.googleapis.com/maps/api/geocode/json?address=${address} Singapore&key=${apiKey}`;\n\n//   //   try {\n//   //     const response = await axios.get(geocodeURI);\n//   //     if (response.status === 200) {\n//   //       if (response.data.status === 'OK') {\n//   //         console.log(response.data);\n//   //         res.statusCode = 200;\n//   //         res.setHeader('Content-Type', 'application/json');\n//   //         res.end(JSON.stringify(response.data));\n//   //       } else {\n//   //         console.log(`Error! ${response.data.status}`);\n//   //       }\n//   //     } else {\n//   //       console.log('There is an Error!\\nReponse Code: ' + response.status.toString());\n//   //     }\n//   //   } catch (err) {\n//   //     console.log('There is an error! Please try again.\\n' + err.toString());\n//   //   }\n//   // } else {\n//   //   throw new Error('Methods other than GET not allowed!');\n//   // }\n//   console.log('in api');\n\n//   // Initialize the cors middleware\n//   const cors = initMiddleware(\n//     // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\n//     Cors()\n//   );\n\n//   // // Run cors\n//   await cors(req, res);\n\n//   // // Rest of the API logic\n//   res.json({ message: 'Hello Everyone!' });\n\n//   // await runMiddlewares(req, res);\n//   // res.statusCode = 200;\n//   // res.json({ hello: 'world' });\n// };\n\n// function initMiddleware(middleware) {\n//   return (req, res) =>\n//     new Promise((resolve, reject) => {\n//       middleware(req, res, (result) => {\n//         if (result instanceof Error) {\n//           return reject(result);\n//         }\n//         return resolve(result);\n//       });\n//     });\n// }\n\nimport { NextApiRequest, NextApiResponse } from 'next';\nimport nextConnect from 'next-connect';\n\nexport default function getHandler() {\n  return nextConnect().get((req: NextApiRequest, res: NextApiResponse) => {\n    res.send('Hello world');\n  });\n}\n"]},"metadata":{},"sourceType":"module"}