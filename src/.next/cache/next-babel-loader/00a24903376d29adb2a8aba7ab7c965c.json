{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jerald/Desktop/nearby-food-web/src/components/specific/eateryType/eateryType.tsx\";\nimport ButtonGroup from 'components/generic/buttonGroup';\nimport { useContext } from 'react';\nimport { GlobalContext, EateryTypes } from 'stores';\n\nconst EateryType = () => {\n  const types = Object.keys(EateryTypes); // TODO: to resolve\n\n  const {\n    0: state,\n    1: dispatch\n  } = useContext(GlobalContext);\n\n  const handleClickEvent = e => {\n    dispatch({\n      type: 'setType',\n      payload: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    className: \"eatery-type\",\n    buttons: types,\n    conditional: true,\n    onClick: handleClickEvent,\n    focussed: state.type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n\nexport default EateryType;","map":{"version":3,"sources":["/Users/jerald/Desktop/nearby-food-web/src/components/specific/eateryType/eateryType.tsx"],"names":["ButtonGroup","useContext","GlobalContext","EateryTypes","EateryType","types","Object","keys","state","dispatch","handleClickEvent","e","type","payload","target","value"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,gCAAxB;AAEA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,EAAgCC,WAAhC,QAAmD,QAAnD;;AAEA,MAAMC,UAAU,GAAG,MAAmB;AACpC,QAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAAd,CADoC,CAEpC;;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBR,UAAU,CAASC,aAAT,CAApC;;AAEA,QAAMQ,gBAAgB,GAAIC,CAAD,IAAO;AAC9BF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AAArC,KAAD,CAAR;AACD,GAFD;;AAIA,sBAAO,QAAC,WAAD;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAqC,IAAA,OAAO,EAAEV,KAA9C;AAAqD,IAAA,WAAW,EAAE,IAAlE;AAAwE,IAAA,OAAO,EAAEK,gBAAjF;AAAmG,IAAA,QAAQ,EAAEF,KAAK,CAACI;AAAnH;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAVD;;AAYA,eAAeR,UAAf","sourcesContent":["import ButtonGroup from 'components/generic/buttonGroup';\n\nimport { useContext } from 'react';\nimport { GlobalContext, IState, EateryTypes } from 'stores';\n\nconst EateryType = (): JSX.Element => {\n  const types = Object.keys(EateryTypes);\n  // TODO: to resolve\n  const [state, dispatch] = useContext<IState>(GlobalContext);\n\n  const handleClickEvent = (e) => {\n    dispatch({ type: 'setType', payload: e.target.value });\n  };\n\n  return <ButtonGroup className='eatery-type' buttons={types} conditional={true} onClick={handleClickEvent} focussed={state.type} />;\n};\n\nexport default EateryType;\n"]},"metadata":{},"sourceType":"module"}