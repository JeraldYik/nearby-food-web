{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jerald/Desktop/nearby-food-web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jerald/Desktop/nearby-food-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\n\nvar getLatLngFromAddress = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get('http://localhost:3000/api/googleConsole');\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getLatLngFromAddress() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar GoogleConsoleAPI = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getLatLngFromAddress();\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function GoogleConsoleAPI() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n_c = GoogleConsoleAPI;\nexport default GoogleConsoleAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleConsoleAPI\");","map":{"version":3,"sources":["/Users/jerald/Desktop/nearby-food-web/src/lib/api/googleConsole/index.ts"],"names":["axios","getLatLngFromAddress","get","GoogleConsoleAPI"],"mappings":";;AAIA,OAAOA,KAAP,MAAkB,OAAlB;;AAeA,IAAMC,oBAAoB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASdD,KAAK,CAACE,GAAN,CAAU,yCAAV,CATc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBD,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;AAYA,IAAME,gBAAgB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVF,oBAAoB,EADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBE,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;KAAMA,gB;AAIN,eAAeA,gBAAf","sourcesContent":["import API from 'lib/api/client.contract';\nimport getConfig from 'next/config';\nimport { ILatlng } from 'components/specific/addressField';\nimport { EateryTypes } from 'stores';\nimport axios from 'axios';\n\nexport interface IGetLatLngFromAddress {\n  address: string;\n}\n\nexport interface IGetResultsFromLatlng {\n  latlng: ILatlng;\n  type: EateryTypes;\n  rating: number;\n  minPrice: number;\n  maxPrice: number;\n  radius: number;\n}\n\nconst getLatLngFromAddress = async (): Promise<any> => {\n  // const params = new contracts.GetLatLngFromAddress.Params();\n  // const queries = new contracts.GetLatLngFromAddress.Queries();\n  // const body = new contracts.GetLatLngFromAddress.Body();\n  // queries.address = `${p.address} Singapore`;\n  // queries.key = apiKey;\n\n  // const response = await API.call<contracts.GetLatLngFromAddress.Response>(req);\n\n  return await axios.get('http://localhost:3000/api/googleConsole');\n};\n\nconst GoogleConsoleAPI = async () => {\n  return await getLatLngFromAddress();\n};\n\nexport default GoogleConsoleAPI;\n"]},"metadata":{},"sourceType":"module"}