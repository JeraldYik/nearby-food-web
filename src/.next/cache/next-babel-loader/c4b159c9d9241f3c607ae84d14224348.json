{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jerald/Desktop/nearby-food-web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jerald/Desktop/nearby-food-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport axios from 'axios';\nimport useSwr from 'swr';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar baseURL = publicRuntimeConfig.BASE_URL || '';\nvar API = {\n  get: function () {\n    var _s = $RefreshSig$();\n\n    var _get = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, params, queries, body) {\n      var fetcher, url, _useSwr, data, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s();\n\n              fetcher = function fetcher(url) {\n                return axios.get(url).then(function (res) {\n                  return res;\n                });\n              };\n\n              console.log(path);\n              url = generateURL(path, params, queries);\n              console.log(url); // const response = await axios.get(url);\n              // const response = await axios.get('localhost:3000' + path);\n\n              _useSwr = useSwr('localhost:3000' + path, fetcher), data = _useSwr.data, error = _useSwr.error;\n              return _context.abrupt(\"return\", data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), \"0Md9nfe1w9EeNtTpqsFmc6MYhdg=\", false, function () {\n      return [useSwr];\n    }));\n\n    function get(_x, _x2, _x3, _x4) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }()\n};\n\nvar generateURL = function generateURL(path, params, queries) {\n  var finalURL = path.charAt(0) === '/' ? baseURL + path : baseURL + '/' + path;\n  console.log('1', params);\n\n  if (params) {\n    console.log('2');\n    var paramKeys = Object.getOwnPropertyNames(params);\n\n    var _iterator = _createForOfIteratorHelper(paramKeys),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var p = _step.value;\n        finalURL = finalURL.replace(\":\".concat(p), params[p]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  console.log('2');\n\n  if (queries) {\n    var queryKeys = Object.getOwnPropertyNames(queries);\n    var cleanedQueries = queryKeys.filter(function (k) {\n      return queries[k] !== undefined && queries[k] !== null;\n    });\n\n    if (0 === cleanedQueries.length) {\n      return finalURL;\n    }\n\n    finalURL += '?';\n\n    var _iterator2 = _createForOfIteratorHelper(cleanedQueries),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var q = _step2.value;\n        finalURL += \"\".concat(q, \"=\").concat(queries[q], \"&\");\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  console.log('3');\n  return finalURL.slice(0, -1);\n};\n\nexport default API;","map":{"version":3,"sources":["/Users/jerald/Desktop/nearby-food-web/src/lib/api/call.ts"],"names":["axios","useSwr","getConfig","publicRuntimeConfig","baseURL","BASE_URL","API","get","path","params","queries","body","fetcher","url","then","res","console","log","generateURL","data","error","finalURL","charAt","paramKeys","Object","getOwnPropertyNames","p","replace","queryKeys","cleanedQueries","filter","k","undefined","length","q","slice"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport useSwr from 'swr';\nimport getConfig from 'next/config';\n\nconst { publicRuntimeConfig } = getConfig();\nconst baseURL: string = publicRuntimeConfig.BASE_URL || '';\n\nconst API = {\n  get: async <Response>(path: string, params?: any, queries?: any, body?: any): Promise<any> => {\n    const fetcher = (url) => axios.get(url).then((res) => res);\n    console.log(path);\n    const url = generateURL(path, params, queries);\n    console.log(url);\n    // const response = await axios.get(url);\n    // const response = await axios.get('localhost:3000' + path);\n    const { data, error } = useSwr('localhost:3000' + path, fetcher);\n    return data;\n  }\n};\n\nconst generateURL = (path: string, params?: any, queries?: any): string => {\n  let finalURL = path.charAt(0) === '/' ? baseURL + path : baseURL + '/' + path;\n  console.log('1', params);\n  if (params) {\n    console.log('2');\n    const paramKeys = Object.getOwnPropertyNames(params);\n    for (const p of paramKeys) {\n      finalURL = finalURL.replace(`:${p}`, params[p]);\n    }\n  }\n  console.log('2');\n  if (queries) {\n    const queryKeys = Object.getOwnPropertyNames(queries);\n    const cleanedQueries = queryKeys.filter((k: string) => {\n      return queries[k] !== undefined && queries[k] !== null;\n    });\n\n    if (0 === cleanedQueries.length) {\n      return finalURL;\n    }\n\n    finalURL += '?';\n    for (const q of cleanedQueries) {\n      finalURL += `${q}=${queries[q]}&`;\n    }\n  }\n  console.log('3');\n  return finalURL.slice(0, -1);\n};\n\nexport default API;\n"]},"metadata":{},"sourceType":"module"}