{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jerald/Desktop/nearby-food-web/src/components/generic/buttonGroup/buttonGroup.tsx\",\n    _this = this;\n\nimport { Button } from 'semantic-ui-react';\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var buttonsJSXArray = [];\n  props.buttons.map(function (button, key) {\n    buttonsJSXArray.push(button === props.focussed ?\n    /*#__PURE__*/\n    // TODO: change inline style\n    _jsxDEV(Button, {\n      onClick: props.onClick,\n      value: button,\n      style: {\n        backgroundColor: '#cce6ff'\n      },\n      children: button\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.onClick,\n      value: button,\n      children: button\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, _this));\n\n    if (props.conditional && key < props.buttons.length - 1) {\n      buttonsJSXArray.push( /*#__PURE__*/_jsxDEV(Button.Or, {}, \"or-\".concat(key), false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }, _this));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Button.Group, {\n    className: props.className,\n    size: 'large',\n    children: buttonsJSXArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ButtonGroup;\nexport default ButtonGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"sources":["/Users/jerald/Desktop/nearby-food-web/src/components/generic/buttonGroup/buttonGroup.tsx"],"names":["Button","ButtonGroup","props","buttonsJSXArray","buttons","map","button","key","push","focussed","onClick","backgroundColor","conditional","length","className"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgC;AAClD,MAAIC,eAAe,GAAG,EAAtB;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkB,UAACC,MAAD,EAAiBC,GAAjB,EAAiC;AACjDJ,IAAAA,eAAe,CAACK,IAAhB,CACEF,MAAM,KAAKJ,KAAK,CAACO,QAAjB;AAAA;AACE;AACA,YAAC,MAAD;AAAkB,MAAA,OAAO,EAAEP,KAAK,CAACQ,OAAjC;AAA0C,MAAA,KAAK,EAAEJ,MAAjD;AAAyD,MAAA,KAAK,EAAE;AAAEK,QAAAA,eAAe,EAAE;AAAnB,OAAhE;AAAA,gBACGL;AADH,OAAaC,GAAb;AAAA;AAAA;AAAA;AAAA,aAFF,gBAME,QAAC,MAAD;AAAkB,MAAA,OAAO,EAAEL,KAAK,CAACQ,OAAjC;AAA0C,MAAA,KAAK,EAAEJ,MAAjD;AAAA,gBACGA;AADH,OAAaC,GAAb;AAAA;AAAA;AAAA;AAAA,aAPJ;;AAYA,QAAIL,KAAK,CAACU,WAAN,IAAqBL,GAAG,GAAGL,KAAK,CAACE,OAAN,CAAcS,MAAd,GAAuB,CAAtD,EAAyD;AACvDV,MAAAA,eAAe,CAACK,IAAhB,eAAqB,QAAC,MAAD,CAAQ,EAAR,mBAAsBD,GAAtB;AAAA;AAAA;AAAA;AAAA,eAArB;AACD;AACF,GAhBD;AAkBA,sBACE,QAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,SAAS,EAAEL,KAAK,CAACY,SAA/B;AAA0C,IAAA,IAAI,EAAE,OAAhD;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAzBD;;KAAMF,W;AA2BN,eAAeA,WAAf","sourcesContent":["import { Button } from 'semantic-ui-react';\n\ninterface IProps {\n  className: string;\n  buttons: string[];\n  conditional: boolean;\n  onClick: (string) => void;\n  focussed: string;\n}\n\nconst ButtonGroup = (props: IProps): JSX.Element => {\n  var buttonsJSXArray = [] as JSX.Element[];\n  props.buttons.map((button: string, key: number) => {\n    buttonsJSXArray.push(\n      button === props.focussed ? (\n        // TODO: change inline style\n        <Button key={key} onClick={props.onClick} value={button} style={{ backgroundColor: '#cce6ff' }}>\n          {button}\n        </Button>\n      ) : (\n        <Button key={key} onClick={props.onClick} value={button}>\n          {button}\n        </Button>\n      )\n    );\n    if (props.conditional && key < props.buttons.length - 1) {\n      buttonsJSXArray.push(<Button.Or key={`or-${key}`} />);\n    }\n  });\n\n  return (\n    <Button.Group className={props.className} size={'large'}>\n      {buttonsJSXArray}\n    </Button.Group>\n  );\n};\n\nexport default ButtonGroup;\n"]},"metadata":{},"sourceType":"module"}